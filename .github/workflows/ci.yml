name: CI
on: 
  push:
    branches:
      - "dev"
      - "main"
  pull_request:
    types: [opened, reopened, synchronize]

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container: node:22.12.0-bookworm
    services:
      db:
        image: postgres:15.5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Initialize database, set up .env, generate Prisma client
        run: cd server; cp example.env .env; npm run test:db:reset
        env:
          DATABASE_URL: postgresql://postgres@db/app
      - name: Run Tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres@db/app

  build:
    name: Build Image
    needs: test
    runs-on: ubuntu-latest
    # if: ${{ env.BRANCH_NAME == 'dev' }}
    steps:
      - name: Cloning repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up qemu
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: sfcivictech/sf-lifeline:dev
