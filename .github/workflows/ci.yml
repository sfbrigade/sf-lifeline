name: CI
on: 
  push:
    branches:
      - "dev"
      - "main"
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    container: node:22.12.0-bookworm
    services:
      db:
        image: postgres:15.5
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up npm cache
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install Dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Initialize database, set up .env, generate Prisma client
        run: cd server; cp example.env .env; npm run test:db:reset
        env:
          DATABASE_URL: postgresql://postgres@db/app
      - name: Push in-development db changes in draft ONLY
        if: github.event.pull_request.draft == true
        run: cd server; npm run test:db:push
      - name: Run Tests
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres@db/app
      - name: Run client build
        run: npm run build -w client

  build:
    name: Build Image
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'dev' }}
    steps:
      - name: Cloning repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up qemu
        uses: docker/setup-qemu-action@v3
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: sfcivictech/sf-lifeline:${{ github.sha }}

  deploy-dev:
    name: Deploy to Dev
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'dev' }}
    steps:
      - name: Push to dokku
        uses: dokku/github-action@master
        with:
          git_remote_url: 'ssh://dokku@dokku.sflifeline.app:22/dev'
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          deploy_docker_image: sfcivictech/sf-lifeline:${{ github.sha }}
